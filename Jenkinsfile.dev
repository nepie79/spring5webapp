pipeline{
    agent any

    environment {
        ansible_pw = credentials('ansible-vault-pw-file')
    }

    options {
        skipDefaultCheckout(true)
    }

    parameters {
        booleanParam(name: "RunTests", defaultValue: true, description: "Sollen Tests ausgef√ºhrt werden?")
    }

    stages{
        stage('Checkout'){
            steps{
                echo "Checkout"
                checkout scm
            }
        }
        stage('Build'){
            steps{
                echo "Building ..."
                script {
                    sshagent(['ansible_controller']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no osboxes@192.168.178.124 << EOF
                        echo 'Running command on remote host'
                        pwd
                        ansible --version
                        """
                    }
                }
               // dir('ansible') {
               //     sh 'ansible-playbook playbook.yml -i inventory/ -vv --vault-password-file ${ansible_pw}'
               // }
            }
            
        }
        stage('Copy Files to Remote Host') {
            steps {
                script {
                    sshagent(['ansible_controller']) {
                        sh """
                        scp -o StrictHostKeyChecking=no -r ansible osboxes@192.168.178.124:jenkinsAnsible/
                        """
                    }
                }
            }
        }
        stage('Run playbook'){
            steps{
                echo "Building ..."
                script {
                    sshagent(['ansible_controller']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no osboxes@192.168.178.124 << EOF
                        cd jenkinsAnsible/ansible && ansible-playbook playbook.yml -i inventory/ -vv --vault-password-file vault-passwd.txt
                        """
                    }
                }
               // dir('ansible') {
               //     sh 'ansible-playbook playbook.yml -i inventory/ -vv --vault-password-file ${ansible_pw}'
               // }
            }
            
        }
        stage('Test'){
            when { expression { return params.RunTests } }
            steps{
                echo "Testing: ${params.RunTests}"
            }
            
        }
    }
}
